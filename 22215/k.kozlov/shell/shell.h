/*
  Основной модуль шелла. Комментарии для большинства функций находятся в shell.c
*/
#pragma once

#include "shell_structs.h"

extern int terminalDescriptor;
extern pid_t shellPgid;
extern struct termios defaultTerminalSettings;
extern int bgFreeNumber; // Счётчик, который инкрементируется при каждом добавлении задачи в фон. Гарантирует не пересечение IDшников (в рамках значений знакового int'а, но, думаю, этого более чем достаточно)
extern Job* headBgJobFake; // Фальшивая первая фоновая задача. Реальные задачи будет прикрепляться к ней
extern char readInterruptionFlag; // Флаг для печати переноса строки при прерывании чтения сигналом
extern char prompt[1024];

/*
  Считывает из stdin длинную строку, возвращая её размер. В случае прерывания чтения сигналом,
  поставит readInterruptionFlag = 1 и завершится, вернув единицу для продолжения цикла
*/
int promptline(char *, char *, int);
/*
  Парсит полученную из функции выше строку на аргументы и спецсимволы, конструируя новый список задач и процессов в них, 
  голову которого вернёт к результат либо NULL при неудаче. В этой функции вызываются createJob и createProcess, выделяющие память динамически
*/
Job* parseline(char *);

/*
  Опрашивает процессы в группе задачи переднего плана, сохраняя информацию о событиях в её процессах
  Опрос завершится, когда завершатся любым образом все процессы либо когда какой-либо из них будет остановлен
  В случае завершения процессов в задаче, будет вызван freeJob
*/
void waitFgJob(Job* job);